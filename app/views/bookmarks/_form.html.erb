<%= form_with(model: bookmark, local: true) do |f| %>
    <% if bookmark.errors.any? %>
      <div class="alert alert-danger">
        <ul>
          <% bookmark.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  
    <div class="mb-3">
      <%= f.label :url, 'URL', class: 'form-label' %>
      <%= f.text_field :url, class: 'form-control' %>
    </div>
  
    <div class="mb-3">
      <%= f.label :title, 'タイトル', class: 'form-label' %>
      <%= f.text_field :title, class: 'form-control' %>
    </div>
  
    <div class="mb-3">
      <%= f.label :status, 'ステータス', class: 'form-label' %>
      <%= f.select :status, ['未読', '既読'], {}, class: 'form-select' %>
    </div>
  
    <div class="mb-3">
      <%= f.label :tag_names, 'タグ（カンマ区切りで入力）', class: 'form-label' %>
      <%= f.text_field :tag_names, value: bookmark.tags.pluck(:name).join(','), class: 'form-control', placeholder: '例: 仕事,プログラミング,Rails' %>
  
      <% if @suggested_tags.any? %>
        <div class="mt-2">
          <h5>よく使うタグ候補</h5>
          <div class="d-flex flex-wrap gap-2">
            <% @suggested_tags.each do |tag| %>
              <span class="badge bg-secondary tag-suggestion" data-tag="<%= tag.name %>"><%= tag.name %></span>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  
    <div class="text-center">
      <%= f.submit '保存', class: 'btn btn-primary' %>
      <%= link_to '戻る', bookmarks_path, class: 'btn btn-secondary ms-2' %>
    </div>
  <% end %>
  
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const tagInput = document.querySelector("input[name='bookmark[tag_names]']");
      const tagSuggestions = document.querySelectorAll(".tag-suggestion");
  
      tagSuggestions.forEach((element) => {
        element.addEventListener("click", (event) => {
          const tag = event.target.getAttribute("data-tag");
          const currentTags = tagInput.value.split(",").map((t) => t.trim()).filter((t) => t);
  
          if (!currentTags.includes(tag)) {
            currentTags.push(tag);
            tagInput.value = currentTags.join(", ");
          }
        });
      });
    });
  </script>
  